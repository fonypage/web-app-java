INSERT INTO topic (title, content, type, video_url) VALUES
(
  'Циклы в Java',
  '<p>Циклы позволяют выполнять один и тот же фрагмент кода многократно, пока выполняется заданное условие или до достижения определённого числа итераций. Это ключевой инструмент для обхода коллекций, массивов и реализации повторяющихся операций.</p>

  <p><strong>Когда использовать цикл:</strong> при необходимости обойти все элементы массива, собрать данные за определённый промежуток или выполнить повторяющуюся задачу без дублирования кода.</p>

  <p>Следите за условием завершения цикла, иначе можно получить бесконечный цикл и зависание программы.</p>

  <h3>Типы циклов</h3>
  <ul>
    <li><code>for</code> — удобен, когда известно число итераций или требуется счётчик.</li>
    <li><code>while</code> — выполняется до тех пор, пока условие истинно.</li>
    <li><code>do-while</code> — тело выполняется минимум один раз, проверка условия — после.</li>
  </ul>

  <h3>Управляющие операторы</h3>
  <ul>
    <li><code>break</code> — выход из цикла досрочно.</li>
    <li><code>continue</code> — переход к следующей итерации.</li>
    <li><code>return</code> — выход из метода, прерывая все циклы.</li>
  </ul>

  <h3>Вложенные циклы</h3>
  <p>Можно размещать один цикл внутри другого (например, для обхода матриц). Но следите за сложностью: каждая вложенная итерация увеличивает время выполнения.</p>

  <h3>Пример кода</h3>
  <pre><code>for (int i = 0; i < 3; i++) {
    for (int j = 0; j < 3; j++) {
        System.out.println("i=" + i + " j=" + j);
    }
}

int count = 0;
while (count < 5) {
    if (count == 2) {
        count++;
        continue;
    }
    System.out.println(count);
    count++;
}

int k = 0;
do {
    System.out.println("Iteration: " + k);
    k++;
} while (k < 3);
  </code></pre>',
  'theory',
  'https://www.youtube.com/watch?v=r1F2aQh_G6M'
);